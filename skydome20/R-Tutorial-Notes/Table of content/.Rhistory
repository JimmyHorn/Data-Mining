)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
update.result$continueUrl
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title='R-Table_of_content',
htmlFile='Table_of_content.html',
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title='R-Table_of_content',
htmlFile='Table_of_content.html'
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title='R-Table_of_content',
htmlFile='Table_of_content.html',
id = 'https://api.rpubs.com/api/v1/document/160844/ba4802b4430c4cc2be2f2729ac26463d'
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title='R-Table_of_content',
htmlFile='Table_of_content.html'
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'R1'
note.html <- 'R1.html'
find.package("RCurl")
.libPaths( "")
# Update
if (file.exists('rpubs_conn/api_id.txt')){
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = 'https://api.rpubs.com/api/v1/document/159334/a8defec8992d4d8fbee3c1bf640fe41f'
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = 'note.title',
htmlFile = 'R1.html'
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
getwd()
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = 'R1.html'
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = 'R1.html'
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
getwd()
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'Table_of_content'
note.html <- 'Table_of_content.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = note.html
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
