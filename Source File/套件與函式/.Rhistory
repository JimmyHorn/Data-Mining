require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'R3'
note.html <- 'R3.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = 'R1.html'
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
require(markdown)
api_id.path <- 'rpubs_conn/api_id.txt'
note.title <- 'R4'
note.html <- 'R4.html'
# Update
if (file.exists('rpubs_conn/api_id.txt')){
print('Start Updating')
api.id <- read.table(api_id.path, nrows=1, stringsAsFactors = F)[, 1]
# update article on Rpubs
update.result <- rpubsUpload(title = note.title,
htmlFile = note.html,
id = api.id
)
browseURL(update.result$continueUrl)
print('update success')
update.result$continueUrl
# Upload
}else{
print('Start Uploading')
dir.create('rpubs_conn')
# upload article on Rpubs
upload.result <- rpubsUpload(title = note.title,
htmlFile = 'R1.html'
)
upload.result$id
write.table(upload.result$id, api_id.path, row.names = F, col.names = F)
browseURL(upload.result$continueUrl)
print('upload success')
upload.result$continueUrl
}
